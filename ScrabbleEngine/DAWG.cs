// Generated by CoPilot - minor editing by me... Needs testing, ha

namespace ScrabbleEngine
{
    public class DAWGNode
    {
        public Dictionary<char, DAWGNode> Children = new();
        public bool IsWordEnd = false;
    }

    public class DAWG
    {
        private DAWGNode root = new();

        // Reads words from a file and builds the DAWG
        public DAWG(string filePath)
        {
            if (string.IsNullOrEmpty(filePath) == false)
            {
                foreach (var word in File.ReadLines(filePath))
                {
                    AddWord(word.Trim().ToLower());
                }
            }
        }

        // Adds a word to the DAWG
        private void AddWord(string word)
        {
            var current = root;
            foreach (var c in word)
            {
                if (!current.Children.ContainsKey(c))
                {
                    current.Children[c] = new DAWGNode();
                }
                current = current.Children[c];
            }
            current.IsWordEnd = true;
        }

        // Searches for a word in the DAWG
        public bool Search(string word)
        {
            var current = root;
            foreach (var c in word.ToLower())
            {
                if (!current.Children.ContainsKey(c))
                {
                    return false;
                }
                current = current.Children[c];
            }
            return current.IsWordEnd;
        }
    }
}
